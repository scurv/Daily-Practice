import bpy
import os
import csv
from datetime import datetime

class Reader(bpy.types.Operator):
    """Tooltip"""
    bl_idname = "object.reader"
    bl_label = "Reader"
    
    
    cd = os.getcwd()
    wd = os.path.join( cd, r'projects')
    wf = r'Google Stock Market Data - google_stock_data.csv.csv'
    csd = os.path.join( wd, wf)
    file = open(csd, newline = '')
    
#    for line in file:
#        print(line)
#    
#    lines = [line for line in file]
#    
#    print(lines[0])
    reader = csv.reader(file)
    header = next(reader)
#    print(header)
#    data = [row for row in reader]
#    print(data[1])

#    file.close()
    data = []
    #['Date', 'Open', 'High', 'Low', 'Close', 'Volume', 'Adj_Close']
    for row in reader:
        date = datetime.strptime(row[0] , '%m/%d/%Y')
        open_price = float(row[1])
        high = float(row[2])
        low = float(row[3])
        close = float(row[4])
        volume = int(row[5])
        adj_close = float(row[6])
        
        data.append([ date , open_price , high , low , close , volume , adj_close])
    #print(data[0])
    #print(data[1:20])
    
    return_path = os.path.join(wd , 'returns.csv')
    file = open(return_path, 'w')
    writer = csv.writer(file)
    writer.writerow(['data' , 'Return'])
    for i in range(len(data) - 1):
        todays_row = data[i]
        todays_date = todays_row[0]
        todays_price = todays_row[-1]
        yesterdays_row = data[i+1]
        yesterdays_price = yesterdays_row[-1]
        
        daily_return = (todays_price - yesterdays_price) / yesterdays_price
        writer.writerow([todays_date, daily_return])







def register():
    bpy.utils.register_class(Reader)


def unregister():
    bpy.utils.unregister_class(Reader)


if __name__ == "__main__":
    register()

    # test call
    #bpy.ops.object.simple_operator()
