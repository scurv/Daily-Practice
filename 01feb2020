import bpy
import cmath


bpy.ops.object.select_all(True)
bpy.ops.object.delete(use_global=False, confirm=False)


def addcube(x,y,z):
    print(x , y, z)

    bpy.ops.mesh.primitive_cube_add(size=2, enter_editmode=False, location=(x, y, z))

    bpy.ops.transform.resize(value=(1, 1, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)

    bpy.ops.object.modifier_add(type='SUBSURF')
    bpy.ops.object.modifier_apply(apply_as='DATA', modifier="Subdivision")



def thing( x,y,z):
    z = x * y
    addcube(x,y,z)
    


def sweep():
    i=-2.0
    
    while i <2.0:
        #print(i)
        dx = i * 5
        #print(dx)
        #addcube ( dx,0,0)
        i = i + .2
        
        k = -2.0
        while k < 2.0:
            dy = k *5
            print(dx, dy, 0)
            thing( dx,dy,0)
            k = k + .2
        
        
sweep()        
#j = cmath.sqrt(-1)

#print(j)

#x + (y*j)

